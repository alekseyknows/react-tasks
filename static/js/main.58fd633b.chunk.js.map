{"version":3,"sources":["views/Counter/styles.js","views/Counter/index.js","containers/CounterContainer.js","views/ParentCounter/styles.js","views/ParentCounter/index.js","containers/ParentContainer.js","App.js","index.js"],"names":["useStyles","makeStyles","container","margin","maxWidth","textAlign","border","borderRadius","buttons","incrementButton","color","decrementButton","resetButton","text","fontSize","fontWeight","marginTop","Counter","props","classes","className","counter","ButtonGroup","Button","onClick","increment","decrement","reset","CounterContainer","useState","initialValue","setCounter","prevNumChildren","useEffect","numChildren","handleEvenValue","handleOddValue","useMemo","addButton","backgroundColor","removeButton","marginLeft","ParentCounter","addCounter","removeCounter","resetCounter","ParentContainer","setNumChildren","value","ref","useRef","current","usePrevious","children","i","push","buildChildren","App","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.58fd633b.chunk.js","sourcesContent":["// material-ui\r\n// стили, представленные в виде js\r\n\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    \r\n    container: {\r\n        margin: '50px auto 0px',\r\n        maxWidth: '1120px',\r\n        textAlign: 'center',\r\n        border: '1px solid black',\r\n        borderRadius: '20px',\r\n    },\r\n    buttons: {\r\n        margin: '25px 0px 15px 0px',\r\n    },\r\n    incrementButton: {\r\n        color: 'green',\r\n    },\r\n    decrementButton: {\r\n        color: 'red',\r\n    },\r\n    resetButton: {\r\n        color: 'grey',\r\n    },\r\n    text: {\r\n        fontSize: 40,\r\n        fontWeight: 'bold',\r\n        marginTop: '10px',\r\n    }\r\n});\r\n\r\nexport { useStyles };\r\n","// arrow function\r\n// здесь вся html разметка\r\n// подключает переданные props для кнопок\r\n\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\nimport { useStyles } from './styles';\r\n\r\nconst Counter = (props) => {\r\n    Counter.propTypes = {\r\n        counter: PropTypes.number,\r\n        increment: PropTypes.func,\r\n        decrement: PropTypes.func,\r\n        reset: PropTypes.func,\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <div\r\n                className={classes.text}\r\n            >{`Current counter is ${props.counter}`}</div>\r\n            <ButtonGroup className={classes.buttons}>\r\n                <Button\r\n                    className={classes.incrementButton}\r\n                    //onClick={() => props.increment(props.counter)}\r\n                    onClick={props.increment}\r\n                >\r\n                    Increment (+1)\r\n                </Button>\r\n                <Button\r\n                    className={classes.decrementButton}\r\n                    onClick={props.decrement}\r\n                >\r\n                    Decrement (-1)\r\n                </Button>\r\n                <Button className={classes.resetButton} onClick={props.reset}>\r\n                    Reset\r\n                </Button>\r\n            </ButtonGroup>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Counter;\r\n","import React, { useState } from 'react';\r\nimport { useMemo } from 'react';\r\nimport { useEffect } from 'react';\r\nimport Counter from '../views/Counter/index';\r\n\r\nfunction CounterContainer(props) {\r\n    const [counter, setCounter] = useState(props.initialValue);\r\n    const prevNumChildren = props.prevNumChildren;\r\n\r\n    useEffect(() => {\r\n        if (props.numChildren > prevNumChildren) {\r\n            handleEvenValue();\r\n        }\r\n        if (props.numChildren < prevNumChildren) {\r\n            handleOddValue();\r\n        }\r\n    }, [props.numChildren]);\r\n\r\n    const handleEvenValue = () => {\r\n        if (counter % 2 === 0 && counter !== 0) {\r\n            setCounter(counter + 1);\r\n        }\r\n    };\r\n\r\n    const handleOddValue = () => {\r\n        if (counter % 2 !== 0 && counter !== 0) {\r\n            setCounter(counter - 1);\r\n        }\r\n    };\r\n\r\n    return useMemo(\r\n        () => (\r\n            <Counter\r\n                counter={counter}\r\n                increment={() => setCounter(counter + 1)}\r\n                decrement={() => setCounter(counter - 1)}\r\n                reset={() => setCounter(0)}\r\n            />\r\n        ),\r\n        [counter]\r\n    );\r\n}\r\n\r\nexport default CounterContainer;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    buttons: {\r\n        textAlign: 'center',\r\n    },\r\n    addButton: {\r\n        backgroundColor: 'green',\r\n    },\r\n    removeButton: {\r\n        backgroundColor: 'red',\r\n    },\r\n    resetButton: {\r\n        backgroundColor: 'grey',\r\n    },\r\n    counter: {\r\n        marginLeft: '15px',\r\n        fontSize: 30,\r\n        fontWeight: 'bold',\r\n    },\r\n});\r\n\r\nexport { useStyles };\r\n","import PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\nimport { useStyles } from './styles';\r\n\r\nconst ParentCounter = (props) => {\r\n    ParentCounter.propTypes = {\r\n        addCounter: PropTypes.func,\r\n        removeCounter: PropTypes.func,\r\n        resetCounter: PropTypes.func,\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <ButtonGroup className={classes.buttons}>\r\n                <Button\r\n                    className={classes.addButton}\r\n                    onClick={props.addCounter}\r\n                >\r\n                    Add\r\n                </Button>\r\n                <Button\r\n                    className={classes.removeButton}\r\n                    onClick={props.removeCounter}\r\n                >\r\n                    Remove\r\n                </Button>\r\n                <Button\r\n                    className={classes.resetButton}\r\n                    onClick={props.resetCounter}\r\n                >\r\n                    Reset\r\n                </Button>\r\n            </ButtonGroup>\r\n            <span className={classes.counter}>{props.numChildren}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ParentCounter;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport CounterContainer from './CounterContainer';\r\nimport ParentCounter from '../views/ParentCounter';\r\n\r\nfunction ParentContainer() {\r\n    const [numChildren, setNumChildren] = useState(1);\r\n\r\n    const prevNumChildren = usePrevious(numChildren);\r\n\r\n    const addCounter = () => {\r\n        setNumChildren(numChildren + 1);\r\n    };\r\n\r\n    const removeCounter = () => {\r\n        if (numChildren === 1) return;\r\n        setNumChildren(numChildren - 1);\r\n    };\r\n\r\n    const resetCounter = () => {\r\n        setNumChildren(1);\r\n    };\r\n\r\n    const buildChildren = () => {\r\n        const children = [];\r\n\r\n        for (let i = 0; i < numChildren; i++) {\r\n            children.push(\r\n                <CounterContainer\r\n                    key={i}\r\n                    initialValue={0}\r\n                    numChildren={numChildren}\r\n                    prevNumChildren={prevNumChildren}\r\n                />\r\n            );\r\n        }\r\n\r\n        return children;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <ParentCounter\r\n                numChildren={numChildren}\r\n                addCounter={addCounter}\r\n                removeCounter={removeCounter}\r\n                resetCounter={resetCounter}\r\n            />\r\n            {buildChildren()}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction usePrevious(value) {\r\n    const ref = useRef();\r\n\r\n    useEffect(() => {\r\n        ref.current = value;\r\n    }, [value]);\r\n\r\n    return ref.current;\r\n}\r\n\r\nexport default ParentContainer;\r\n","import React, { Component } from 'react';\r\nimport ParentContainer from './containers/ParentContainer';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return <ParentContainer />;\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}